PYTHON PROGRAMMING 
SYNTAX:
Python syntax can be executed by writing directly in the Command Line:
EX: print ("Hello, World!") # Hello, World!
Or by creating a python file on the server, using the .py file extension, and running it in the Command Line:
EX: C:\Users\Your Name>python myfile.py
PYTHON INDENTATION :
	Indentation refers to the spaces at the beginning of a code line.
	The indentation in Python is very important.
	Python uses indentation to indicate a block of code.
EX-1: if 5 > 2:
                     print ("Five is greater than two!") #Five is greater than two!
	Python will give you an error if you skip the indentation.
EX-2:if 5 > 2:
           print ("Five is greater than two!") #ERROR
	The number of spaces is up to you as a programmer, the most common use is four, but it has to be at least one. 
      EX-3 : if 5 > 2:
                   print("Five is greater than two!") 
             if 5 > 2:
       		 print("Five is greater than two!") # Five is greater than two!
     Five is greater than two!
	The same number of spaces in the same block of code, otherwise Python will give you Error.
PYTHON VARIABLES :
	Variables are containers for storing data values.
	Python has no command for declaring a variable.
	A variable is created the moment you first assign a value to it.
EX : 
x = 5
y = "John"
print(x) #5
print(y) #John
	Variables do not need to be declared with any particular type, and can even change type after they have been set.
	EX:
x = 4       # x is of type int
x = "Sally" # x is now of type str
print(x) # x is now of type str
CASTING :
	If you want to specify the data type of a variable, this can be done with casting.
EX:
x = str(3)    # x will be '3'
y = int(3)    # y will be 3
z = float(3)  # z will be 3.0
	Get the Type :
	Get the data type of a variable with the type() function.
EX:
x = 5
y = "John"
print(type(x)) #<class ‘int’>
print(type(y)) #<class ‘str’>
	String variables can be declared either by using single or double quotes:
EX: 
